#!/bin/bash

#declare -a references_double=('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','z')
# references array
declare -a references_single=("a" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "o" "r" "s" "t" "u" "v" "w" "x")
declare -a references_double=("a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "z")

declare -A references=()

nextref=""

# TODO: cmdline to 'sync' (syncs)

# TODO: sync git

# TODO: should open up a tmux (NO, this should be the DE's job in a shortcut)

DATA_DIR="." # NOTE: debug

notesfolder="$DATA_DIR/session-notes"

# ensure this computer has a folder in the notesfolder
#if [ ! -d "$notesfolder/$HOSTNAME" ]; then
	#mkdir $notesfolder/$HOSTNAME
#fi

function inserttime
{
	datetimestring=`date +'%Y.%m.%d %H:%M:%S'`
	echo -e "\n----- $datetimestring -----\n" >> "$1"
}

function editfile
{
	nvim "+ normal Go" "$1"
}

# get user input
echo -e "Press 'n' to create a new notes session, or the key combo in yellow below to open a previous session"

# TODO: get file list
doubleNeeded=false
count=`ls $notesfolder -1q | wc -l`

if [ $count -gt ${#references_single[@]} ]; then
	doubleNeeded=true
fi

# iterate through each filename, print it out and store reference characters with it
pushd $notesfolder &>/dev/null
index=0
for filename in `ls -t1q`; do
	coloredname=`sed -E "s/(.*)_(.*)_(.*)/$(printf "$C_BLUE_L")\1$(printf "$C_RESET")\_\2\_\3/g" <<< "$filename"`

	nextref="${references_single[$index]}"
	references+=(["$nextref"]="$filename")
	index=$index+1
	
	echo -e "$C_YELLOW_L$nextref $C_RESET$coloredname"
done
popd &>/dev/null


read -p "Input: " -rn1 char1 
if [[ "$char1" == "n" ]]; then
	echo -e "\nCreating a new notes session"
	
	read -p "Session name: " name
	echo $name

	datestring=`date +"%Y.%m.%d"`

	filename="${name}_${HOSTNAME}_${datestring}"
	echo "$filename"
	touch "$notesfolder/$filename"
	
	inserttime "$notesfolder/$filename"
	
	# TODO: sync git?

	editfile "$notesfolder/$filename"
else 
	echo $char1
	filename=${references[$char1]}
	echo "$filename"
	inserttime "$notesfolder/$filename"
	editfile "$notesfolder/$filename"
fi


# TODO: sync git
