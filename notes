#!/bin/bash

#declare -a references_double=('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','z')
# references array
declare -a references_single=("a" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "o" "r" "s" "t" "u" "v" "w" "x")
declare -a references_double=("a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "z")

declare -A references=()

nextref=""

# TODO: cmdline to 'sync' (syncs)


#DATA_DIR="." # NOTE: debug (local testing)

notesfolder="$DATA_DIR/session-notes/notes"

# sync git
echo "Syncing notes..."
pushd $notesfolder &>/dev/null
git pull
popd

# ensure this computer has a folder in the notesfolder
#if [ ! -d "$notesfolder/$HOSTNAME" ]; then
	#mkdir $notesfolder/$HOSTNAME
#fi

function inserttime
{
	datetimestring=`date +'%Y.%m.%d %H:%M:%S'`
	echo -e "\n----- $datetimestring -----\n" >> "$1"
}

function editfile
{
	nvim "+ normal Go" "$1"
}

echo -e "Press 'n' to create a new notes session, or the key combo in yellow below to open a previous session"

doubleNeeded=false
count=`ls $notesfolder -1q | wc -l`

if [ $count -gt ${#references_single[@]} ]; then
	doubleNeeded=true
fi

# iterate through each filename, print it out and store reference characters with it
pushd $notesfolder &>/dev/null
index=0
subindex=0
for filename in `ls -t1q`; do
	coloredname=`sed -E "s/(.*)_(.*)_(.*)/$(printf "$C_BLUE_L")\1$(printf "$C_RESET")\_\2\_\3/g" <<< "$filename"`

	nextref=""
	
	if [ "$doubleNeeded" = 'true' ]; then
		nextref="${references_single[$index]}${references_double[$subindex]}"
		if [[ "$subindex" -ge "${#references_double[@]}" ]]; then
			subindex=0
			index=$index+1
		else
			subindex=$subindex+1
		fi
	else
		nextref="${references_single[$index]}"
		index=$index+1
	fi
	
	references+=(["$nextref"]="$filename")
	echo -e "$C_YELLOW_L$nextref $C_RESET$coloredname"
done
popd &>/dev/null


# get user input
read -p "Input: " -rn1 char1 
if [[ "$char1" == "n" ]]; then
	echo -e "\nCreating a new notes session"
	
	read -p "Session name: " name
	echo $name

	datestring=`date +"%Y.%m.%d"`

	filename="${name}_${HOSTNAME}_${datestring}"
	echo "$filename"
	touch "$notesfolder/$filename"
	
	inserttime "$notesfolder/$filename"
	
	editfile "$notesfolder/$filename"
	
	# sync git stuff
	echo "Syncing notes..."
	pushd $notesfolder &>/dev/null
	git add -A 
	git commit -am "Added $filename"
	git push
	popd
else 
	referencestring="$char1"
	
	if [ "$doubleNeeded" = 'true' ]; then
		read -rn1 char2
		referencestring="$char1$char2"
	fi
		
	filename=${references[$referencestring]}
	echo -e "\nOpening $filename..."
	inserttime "$notesfolder/$filename"
	editfile "$notesfolder/$filename"
	
	# sync git stuff
	echo "Syncing notes..."
	pushd $notesfolder &>/dev/null
	git commit -am "Edited $filename"
	git push
	popd
fi
